name: Sole Deployer
description: Deploys Kubernetes and Terraform updates
inputs:
  app_name:
    description: The name of the app being deployed. This is used in the slack message and defaults to the repository name if not provided.
    required: false
  chat_gpt_api_key:
    description: The API key for ChatGPT. It must have read and write permissions for chat completions.
    required: true
  chat_gpt_model:
    description: The model to use for ChatGPT. Defaults to `latest` if not provided.
    required: false
  jira_api_key:
    description: A base64 encoded string containing the Jira username and API key in a `<username>:<api_token>` format. The API key must have read permissions for Jira issues.
    required: true
  jira_base_url:
    description: The base URL for your Jira instance, e.g. https://my-company.atlassian.net
    required: true
  slack_webhook_url:
    description: The webhook URL for the Slack channel where release summary will be sent.
    required: true

runs:
  using: "composite"
  steps:
    - name: Set reusable variables
      shell: bash
      run: |
        echo "action_repo=anno" >> $GITHUB_ENV
        echo "action_org=The-Sole-Supplier" >> $GITHUB_ENV
        echo "binary_name=action" >> $GITHUB_ENV

    - name: Add binary extension
      shell: bash
      if: runner.os == 'Windows'
      run: echo "binary_name=${{ env.binary_name }}.exe" >> $GITHUB_ENV

    - name: Get Action Version
      id: get_action_version
      shell: pwsh
      run: |
        $finalComponent = Split-Path -Leaf ${{ github.action_path }}
        if ($finalComponent -eq "${{ env.action_repo }}") {
          $version = ""
        } else {
          $version = $finalComponent
        }
        Write-Output "version=$version" >> $Env:GITHUB_OUTPUT

    - name: Download Action
      shell: bash
      run: |
        gh release download ${{ steps.get_action_version.outputs.version }} --repo ${{ env.action_org }}/${{ env.action_repo }} --pattern '${{ runner.os }}.tgz'
        tar -xzf ${{ runner.os }}.tgz
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Run Action
      shell: bash
      id: run
      run: ./${{ runner.os }}/${{ env.binary_name }}
      env:
        GITHUB_BASE_URL: https://api.github.com
        CHAT_GPT_BASE_URL: https://api.openai.com/v1
        REPOS_DIR: ./repos
        SLACK_MESSAGE_ENABLED: true
